<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="Logs\NLog.txt"
	  throwExceptions="false">

	<!--https://nlog-project.org/config/?tab=layout-renderers-->

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- write logs to file  -->
		<target xsi:type="File" name="target1" fileName="${basedir}/Logs/${shortdate}_logfile.txt"
		  layout="${date}|${level:uppercase=true}|${message} ${exception}|${logger}|${all-event-properties}" />
		<target xsi:type="Console" name="target2"
				layout="${date}|${level:uppercase=true}|${message} ${exception}|${logger}|${all-event-properties}" />

	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<logger name="*" minlevel="Debug" writeTo="target1,target2" />
		<!--Output hosting lifetime messages to make Azure/Docker/VisualStudio happy -->
		<logger name="Microsoft.Hosting.Lifetime" level="Info" writeTo="target1,target2" final="true" />
		<!--Skip non-critical Microsoft logs and so log only own logs-->
		<logger name="Microsoft.*" maxlevel="Info" final="true" />
		<!--Prevent ExceptionHandlerMiddleware from logging on its own-->
		<logger name="Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware" maxlevel="Off" final="true" />
		<!--https://stackoverflow.com/questions/50451430/nlog-filters-working-with-final-blackhole-->

	</rules>

</nlog>